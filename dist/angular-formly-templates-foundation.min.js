// angular-formly-templates-foundation version 1.0.0-beta.0 built with ♥ by Kent C. Dodds <kent@doddsfamily.us> (ó ì_í)=óò=(ì_í ò)

!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("angular"),require("api-check"),require("angular-formly")):"function"==typeof define&&define.amd?define(["angular","api-check","angular-formly"],t):"object"==typeof exports?exports.ngFormlyTemplatesFoundation=t(require("angular"),require("api-check"),require("angular-formly")):e.ngFormlyTemplatesFoundation=t(e.angular,e.apiCheck,e.ngFormly)}(this,function(e,t,n){return function(e){function t(o){if(n[o])return n[o].exports;var i=n[o]={exports:{},id:o,loaded:!1};return e[o].call(i.exports,i,i.exports,t),i.loaded=!0,i.exports}var n={};return t.m=e,t.c=n,t.p="",t(0)}([function(e,t,n){"use strict";e.exports=n(2)},function(e,t,n){"use strict";var o=n(21);o.version||(o=window.angular),e.exports=o},function(e,t,n){"use strict";var o="formlyFoundation",i=n(1),a=i.module(o,[n(23)]);a.constant("formlyFoundationApiCheck",n(22)({output:{prefix:"angular-formly-foundation"}})),a.constant("formlyFoundationVersion","1.0.0-beta.0"),n(13)(a),n(7)(a),n(5)(a),e.exports=o},function(e,t,n){"use strict";e.exports=function(e){function t(e,t){var o=n(14),i=t.shape({"class":t.string.optional,text:t.string.optional}).strict.optional,a=t.shape({templateOptions:t.shape({addonLeft:i,addonRight:i})});e.templateManipulators.preWrapper.push(function(e,n){return"input"!==n.type||!n.templateOptions.addonLeft&&!n.templateOptions.addonRight?e:(t.warn([a],[n]),o.replace("<formly-transclude></formly-transclude>",e))})}e.run(t),t.$inject=["formlyConfig","formlyFoundationApiCheck"]}},function(e,t,n){"use strict";e.exports=function(e){function t(e){e.templateManipulators.preWrapper.push(function(e,t,n){if(angular.isDefined(t.templateOptions.description)&&"radio"!==t.type&&"checkbox"!==t.type){var o=document.createElement("div");o.appendChild(angular.element(e)[0]);var i=angular.element(o.querySelectorAll("[ng-model]"));return i?(o.appendChild(angular.element('<p id="'+n.id+'_description"class="help-block"ng-if="to.description">{{to.description}}</p>')[0]),i.attr("aria-describedby",n.id+"_description"),o.innerHTML):e}return e})}e.run(t),t.$inject=["formlyConfig"]}},function(e,t,n){"use strict";var o=function(e){return e&&e.__esModule?e["default"]:e},i=o(n(3)),a=o(n(4));e.exports=function(e){i(e),a(e)}},function(e,t,n){"use strict";e.exports=function(e){function t(e,t){var o=t;e.setType({name:"checkbox",template:n(15),wrapper:["templateHasError"],apiCheck:{templateOptions:o.shape({label:o.string})},apiCheckInstance:o})}e.config(t),t.$inject=["formlyConfigProvider","formlyFoundationApiCheck"]}},function(e,t,n){"use strict";e.exports=function(e){n(6)(e),n(9)(e),n(8)(e),n(10)(e),n(11)(e),n(12)(e)}},function(e,t,n){"use strict";e.exports=function(e){function t(e){e.setType({name:"input",template:'<input ng-model="model[options.key]">',wrapper:["templateLabel","templateHasError"],defaultOptions:{templateOptions:{type:"text"}}})}e.config(t),t.$inject=["formlyConfigProvider"]}},function(e,t,n){"use strict";e.exports=function(e){function t(e,t){var o=t;e.setType({name:"multiCheckbox",template:n(16),wrapper:["templateLabel","templateHasError"],defaultOptions:{noFormControl:!1},apiCheck:{templateOptions:o.shape({options:o.arrayOf(o.object),labelProp:o.string.optional,valueProp:o.string.optional})},apiCheckInstance:o,controller:["$scope",function(e){function t(){e.model[o.key]=[],angular.forEach(e.multiCheckbox.checked,function(t,i){t&&e.model[o.key].push(n.options[i][n.valueProp||"value"])})}var n=e.to,o=e.options;e.multiCheckbox={checked:[],change:t};var i=e.model[o.key];angular.isArray(i)&&!function(){var t=n.valueProp||"value";angular.forEach(n.options,function(n,o){e.multiCheckbox.checked[o]=-1!==i.indexOf(n[t])})}()}]})}e.config(t),t.$inject=["formlyConfigProvider","formlyFoundationApiCheck"]}},function(e,t,n){"use strict";e.exports=function(e){function t(e,t){var o=t;e.setType({name:"radio",template:n(17),wrapper:["templateLabel","templateHasError"],defaultOptions:{noFormControl:!1},apiCheck:{templateOptions:o.shape({options:o.arrayOf(o.object),labelProp:o.string.optional,valueProp:o.string.optional})},apiCheckInstance:o})}e.config(t),t.$inject=["formlyConfigProvider","formlyFoundationApiCheck"]}},function(e,t,n){"use strict";e.exports=function(e){function t(e,t){var o=t;e.setType({name:"select",template:n(18),wrapper:["templateLabel","templateHasError"],apiCheck:{templateOptions:o.shape({options:o.arrayOf(o.object),labelProp:o.string.optional,valueProp:o.string.optional,groupProp:o.string.optional})},apiCheckInstance:o})}e.config(t),t.$inject=["formlyConfigProvider","formlyFoundationApiCheck"]}},function(e,t,n){"use strict";e.exports=function(e){function t(e,t){var n=t;e.setType({name:"textarea",template:'<textarea class="" ng-model="model[options.key]"></textarea>',wrapper:["templateLabel","templateHasError"],defaultOptions:{ngModelAttrs:{rows:{attribute:"rows"},cols:{attribute:"cols"}}},apiCheck:{templateOptions:n.shape({rows:n.number.optional,cols:n.number.optional})},apiCheckInstance:n})}e.config(t),t.$inject=["formlyConfigProvider","formlyFoundationApiCheck"]}},function(e,t,n){"use strict";e.exports=function(e){function t(e,t){var o=t;e.setWrapper([{name:"templateLabel",template:n(20),apiCheck:{templateOptions:o.shape({label:o.string,required:o.bool.optional})},apiCheckInstance:o},{name:"templateHasError",template:n(19)}])}e.config(t),t.$inject=["formlyConfigProvider","formlyFoundationApiCheck"]}},function(e,t,n){e.exports='<div ng-class="{\'\': to.addonLeft || to.addonRight}">\n    <div class="" ng-if="to.addonLeft">\n        <i class="{{to.addonLeft.class}}" ng-if="to.addonLeft.class"></i>\n        <span ng-if="to.addonLeft.text">{{to.addonLeft.text}}</span>\n    </div>\n    <formly-transclude></formly-transclude>\n    <div class="" ng-if="to.addonRight">\n        <i class="{{to.addonRight.class}}" ng-if="to.addonRight.class"></i>\n        <span ng-if="to.addonRight.text">{{to.addonRight.text}}</span>\n    </div>\n</div>'},function(e,t,n){e.exports='<div class="checkbox">\n	<label>\n		<input type="checkbox"\n           class="formly-field-checkbox"\n		       ng-model="model[options.key]">\n		{{to.label}}\n		{{to.required ? \'*\' : \'\'}}\n	</label>\n</div>\n'},function(e,t,n){e.exports='<div ng-repeat="(key, option) in to.options" class="checkbox">\n  <label>\n    <input type="checkbox"\n           id="{{id + \'_\'+ $index}}"\n           ng-model="multiCheckbox.checked[$index]"\n           ng-change="multiCheckbox.change()">\n      {{option[to.labelProp || \'name\']}}\n  </label>\n</div>\n'},function(e,t,n){e.exports='<div ng-repeat="(key, option) in to.options" class="radio">\n  <label>\n    <input type="radio"\n           id="{{id + \'_\'+ $index}}"\n           tabindex="0"\n           ng-value="option[to.valueProp || \'value\']"\n           ng-model="model[options.key]">\n      {{option[to.labelProp || \'name\']}}\n  </label>\n</div>\n'},function(e,t,n){e.exports="<select\n  ng-model=\"model[options.key]\"\n  ng-options=\"option[to.valueProp || 'value'] as option[to.labelProp || 'name'] group by option[to.groupProp || 'group'] for option in to.options\">\n</select>"},function(e,t,n){e.exports='<div class="" ng-class="{\'has-error\': showError}">\n  <formly-transclude></formly-transclude>\n</div>\n'},function(e,t,n){e.exports="<label for=\"{{id}}\" class=\"\">\n  {{to.label}}\n  {{to.required ? '*' : ''}}\n</label>\n<formly-transclude></formly-transclude>\n"},function(t,n,o){t.exports=e},function(e,n,o){e.exports=t},function(e,t,o){e.exports=n}])});
//# sourceMappingURL=angular-formly-templates-foundation.min.js.map